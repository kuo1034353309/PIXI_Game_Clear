{"version":3,"file":"main.js","mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;UCVA;UACA;;;;;WCDA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;;;;ACNO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACA;AACA;AACA;AACA;AACP;AACO;AACA;AACA,4BAA4B,qB;;;;;;;;AClEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;AClCA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,WAAW;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;AChSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,mEAAmE;AAC/H,0DAA0D,mEAAmE;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,GAAG;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,WAAW,UAAU,WAAW,QAAQ;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS,KAAK;AACd;AACA;AACA,gBAAgB,8BAA8B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E,yBAAyB;AACtG,0EAA0E,cAAc;AACxF,6EAA6E,cAAc;AAC3F;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,8BAA8B,kBAAkB;AAChD;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,qDAAqD,sEAAsE;AAC3H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,gDAAgD;AAChD;AACA;AACA,aAAa;AACbgC","sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./src/globalData.js","webpack:///./src/soundManager.js","webpack:///./src/myButton.js","webpack:///./src/itemBody.js","webpack:///./src/mainUI.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export const globalItemData = [\r\n    {\r\n        name:\"icon1\",\r\n        radius:50>>1,\r\n        color:\"e37b0d\"\r\n    },\r\n    {\r\n       name:\"icon2\",\r\n       radius:111>>1,\r\n       color:\"efef11\"\r\n   },\r\n   {\r\n       name:\"icon3\",\r\n       radius:141>>1,\r\n       color:\"cea2eb\"\r\n   }\r\n   ,\r\n   {\r\n       name:\"icon4\",\r\n       radius:160>>1,\r\n       color:\"26d826\"\r\n   }\r\n   ,\r\n   {\r\n       name:\"icon5\",\r\n       radius:169>>1,\r\n       color:\"c5a5a5\"\r\n   }\r\n   ,\r\n   {\r\n       name:\"icon6\",\r\n       radius:198>>1,\r\n       color:\"e01717\"\r\n   }\r\n   ,\r\n   {\r\n       name:\"icon7\",\r\n       radius:240>>1,\r\n       color:\"dc13dc\"\r\n   }\r\n   ,\r\n   {\r\n       name:\"icon8\",\r\n       radius:271>>1,\r\n       color:\"1ae01a\"\r\n   },\r\n   {\r\n       name:\"icon9\",\r\n       radius:305>>1,\r\n       color:\"e7971e\"\r\n   },\r\n   {\r\n       name:\"icon10\",\r\n       radius:460>>1,\r\n       color:\"ffff00\"\r\n   }\r\n];\r\n\r\nexport const StageWidth = 750;\r\nexport const StageHeight = 1624;\r\nexport const StageMinHeight = 1334;\r\nexport const StageMaxScale = 750/StageMinHeight;\r\nexport const StageMinScale = 750/StageHeight;\r\n\r\nexport const SafeLineY = 300//800//300;\r\nexport const ShowSafeLineY = 500//1000//500;\r\nexport const EndStatesTime = 2000; //有一个body持续超过结束线两秒就gg","class soundManager{\r\n\r\n    _instance;\r\n    bufferListObj ;\r\n    static get Ins(){\r\n        if(!this._instance){\r\n            window.AudioContext = window.AudioContext || window.webkitAudioContext || window.mozAudioContext || window.msAudioContext;\r\n            this._instance = new soundManager();\r\n            this._instance.bufferListObj = [];\r\n        }\r\n        return this._instance;\r\n    }\r\n\r\n    play(data ,loop = false){\r\n        var that =this;\r\n        var ctx = new AudioContext();\r\n        var startFun = function (arraybuffer){\r\n            ctx.decodeAudioData(arraybuffer, function (buffer) {\r\n                //处理成功返回的数据类型为AudioBuffer\r\n                //创建AudioBufferSourceNode对象\r\n                that.bufferListObj[data.url] = buffer;\r\n                var source = ctx.createBufferSource();\r\n                source.buffer = buffer;\r\n                source.connect(ctx.destination);\r\n                //指定位置开始播放\r\n                source.loop = loop;\r\n                source.start(0);\r\n      \r\n            }, function (e) {\r\n                console.info('处理出错');\r\n            });\r\n        }\r\n\r\n        if (!window.AudioContext) {\r\n            alert('您的浏览器不支持AudioContext');\r\n        } else {\r\n            //创建上下文\r\n            if(this.bufferListObj[data.url]){// 有过\r\n                var source = ctx.createBufferSource();\r\n                source.buffer = this.bufferListObj[data.url];\r\n                source.connect(ctx.destination);\r\n                //指定位置开始播放\r\n                source.loop = loop;\r\n                source.start(0);\r\n            }else{\r\n                startFun(data.data);\r\n            }\r\n\r\n            // if(typeof(data) === \"string\"){\r\n            //     //使用Ajax获取音频文件   \r\n            //     var request = new XMLHttpRequest();\r\n            //     request.open('GET', data, true);\r\n            //     request.responseType = 'arraybuffer';//配置数据的返回类型\r\n            //     //加载完成\r\n            //     request.onload = function () {\r\n            //         var arraybuffer = request.response;\r\n            //         startFun(arraybuffer);\r\n            //     }\r\n                \r\n            //     request.send();\r\n            // }else{\r\n            //     startFun(data);\r\n            // }                 \r\n        }\r\n\r\n    }\r\n}\r\n","class myButton extends PIXI.Sprite{\r\n    // 简单按钮 一张图片  点击缩小 松开还原\r\n    clickCallBack;\r\n    constructor(){\r\n        super();\r\n        this.interactive = true;\r\n        this.anchor.set(0.5);\r\n        this.on(\"mousedown\" ,this.onClickMouseDown , this);\r\n        this.on(\"touchstart\" ,this.onClickMouseDown , this);\r\n        this.on(\"touchmove\" ,this.onClickMouseDown , this);\r\n\r\n        this.on(\"mouseup\" ,this.onClickMouseUp , this); \r\n        this.on(\"mouseupoutside\" ,this.onClickMouseUp , this);\r\n        this.on(\"touchend\" ,this.onClickMouseUp , this); \r\n        this.on(\"touchendoutside\" ,this.onClickMouseUp , this); \r\n    }\r\n\r\n    onClickMouseDown(evt){ \r\n        if(evt.target === this){\r\n            this.scale.set(0.9,0.9);\r\n            evt.stopPropagation();\r\n        }\r\n\r\n    }\r\n    onClickMouseUp(evt){\r\n        if(evt.target === this){\r\n            this.scale.set(1,1)\r\n            if(this.clickCallBack){\r\n                this.clickCallBack();\r\n            }\r\n            evt.stopPropagation();\r\n        }\r\n  \r\n    }\r\n}","class itemBody{\r\n\r\n    displayObj;//\r\n    body;\r\n    options;\r\n    resources;\r\n    type;\r\n    itemData;\r\n    isOverRedLine;\r\n    isOverTimeStamp;\r\n    oldShowOverStamp;\r\n    tweenItem;\r\n    constructor(options){\r\n        this.options = options;\r\n        this.type = options.type;\r\n        this.isOverRedLine = false;\r\n        this.isOverRedLine = NaN;\r\n        this.oldShowOverStamp = NaN;\r\n        this.init(options);\r\n    }\r\n\r\n    init(options){\r\n        this.itemData = globalItemData[this.type];\r\n        this.resources = options.resources;\r\n        var sprite =this.displayObj = new PIXI.Sprite(this.resources.pngList.textures[this.itemData.name+\".png\"]);\r\n        options.parent.addChild(sprite);\r\n        sprite.x= options.x;\r\n        sprite.y = options.y;\r\n        sprite.width = sprite.height = this.itemData.radius*2;\r\n        var Bodies = Matter.Bodies;\r\n        var World  = Matter.World;\r\n        var boxA = this.body = Bodies.circle(options.x, options.y, this.itemData.radius, {\r\n            friction:1, /**设置球的摩擦力*/\r\n            frictionStatic:1,\r\n            timeScale:1.8,\r\n            // restitution:0.05,\r\n            density: 0.001//0.001 + 0.001 * this.type * this.type//物\r\n        });\r\n        this.body.radius =  this.itemData.radius\r\n        World.add(options.matterEngine.world,[boxA]);\r\n        sprite.anchor.set(0.5);\r\n        Matter.Body.set(this.body, \"isStatic\", options.isStatic);\r\n        Matter.Body.set(this.body, \"torque\",false);\r\n    }\r\n\r\n    setPos(x,y){\r\n        if(this.body && this.displayObj){\r\n            Matter.Body.set(this.body, \"position\",   {x: x, y: y});\r\n            this.displayObj.x = x;\r\n        }\r\n \r\n    }\r\n\r\n    openStatic(){\r\n        if(this.body){\r\n            Matter.Body.set(this.body, \"isStatic\", false);\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    update(){\r\n        this.updateDisplayPos();\r\n        this.updateEndStates();\r\n    }\r\n    updateDisplayPos(){\r\n        const displayObject = this.displayObj;\r\n        const body = this.body;\r\n        if(!displayObject || !body){\r\n            return;\r\n        }\r\n        displayObject.x = body.position.x;\r\n        displayObject.y = body.position.y;\r\n        displayObject.rotation =  body.angle;\r\n        displayObject.scaleX = body.render.sprite.xScale\r\n        displayObject.scaleY = body.render.sprite.yScale;\r\n        displayObject.anchor.set(body.render.sprite.xOffset , body.render.sprite.yOffset);\r\n        displayObject.width = displayObject.height = this.itemData.radius*2;\r\n    }\r\n\r\n    updateEndStates(){\r\n        if(this.isOverRedLine){\r\n            if(isNaN(this.oldShowOverStamp)){\r\n                this.oldShowOverStamp = this.isOverTimeStamp;\r\n            }\r\n            var time = Date.now();\r\n            if(this.displayObj && time - this.oldShowOverStamp>=100){\r\n                this.oldShowOverStamp = time;\r\n                if(this.displayObj.tint  !== 0xff0000){\r\n                    this.displayObj.tint  = 0xff0000;\r\n                }else{\r\n                    this.displayObj.tint  = 0xffffff;\r\n                }\r\n            }\r\n        }else{\r\n            if( this.displayObj &&  this.displayObj.tint!== 0xffffff){\r\n                this.displayObj.tint  = 0xffffff;\r\n            }\r\n        }\r\n    }\r\n\r\n    toNext(postion){\r\n        \r\n        // this.type ++;\r\n        // let x = this.body.position.x;\r\n        // let y = this.body.position.y;\r\n        // this.removeBody();\r\n        // this.removeDisplay();\r\n\r\n        // var opt = {\r\n        //     x: (x + postion.x)>>1,\r\n        //     y: (y + postion.y)>>1,\r\n        //     matterEngine:this.options.matterEngine , \r\n        //     resources:this.resources ,\r\n        //     parent :this.options.parent , \r\n        //     type:this.type,\r\n        //     isStatic:false\r\n        // };\r\n        // this.init(opt);\r\n\r\n        this.type ++;\r\n        let x = this.body.position.x;\r\n        let y = this.body.position.y;\r\n        \r\n        \r\n        this.tweenItem = TweenMax.to(this.displayObj.position, 0.08, {\r\n           x:(x + postion.x)>>1,\r\n           y:(y + postion.y)>>1,\r\n            onComplete:  () =>{\r\n                this.removeBody();\r\n                this.removeDisplay();\r\n                var opt = {\r\n                    x: (x + postion.x)>>1,\r\n                    y: (y + postion.y)>>1,\r\n                    matterEngine:this.options.matterEngine , \r\n                    resources:this.resources ,\r\n                    parent :this.options.parent , \r\n                    type:this.type,\r\n                    isStatic:false\r\n                };\r\n                this.init(opt);\r\n            }\r\n          }\r\n          );\r\n\r\n\r\n    }\r\n\r\n      /**\r\n     * 移除body\r\n     */\r\n    removeBody(){\r\n        if(this.body){\r\n            Matter.World.remove(this.options.matterEngine.world, this.body, true);\r\n            this.body  = null;\r\n        }\r\n    }\r\n\r\n    removeDisplay(){\r\n        if(this.displayObj){\r\n            if(this.displayObj.parent){ \r\n                this.displayObj.parent.removeChild(this.displayObj);\r\n            }\r\n            this.displayObj.destroy();\r\n            this.displayObj = null;\r\n        }\r\n    }\r\n    showBomb(){\r\n        soundManager.Ins.play(this.resources.bombMu ,false);\r\n        let x = this.displayObj.x;\r\n        let y = this.displayObj.y;\r\n        var emitter = this.particle = new PIXI.particles.Emitter(\r\n            this.options.parent,\r\n\r\n            // The collection of particle images to s\r\n            [this.resources.pngList.textures[this.itemData.name+\".png\"]],\r\n            {\r\n                alpha: {\r\n                    list: [\r\n                        {\r\n                            value: 0.8,\r\n                            time: 0\r\n                        },\r\n                        {\r\n                            value: 0.1,\r\n                            time: 1\r\n                        }\r\n                    ],\r\n                    isStepped: false\r\n                },\r\n                scale: {\r\n                    list: [\r\n                        {\r\n                            value: 0.5,\r\n                            time: 0\r\n                        },\r\n                        {\r\n                            value: 0.1,\r\n                            time: 1\r\n                        }\r\n                    ],\r\n                    isStepped: false\r\n                },\r\n                color: {\r\n                    list: [\r\n                        {\r\n                            value: this.itemData.color,//\"fb1010\",\r\n                            time: 0\r\n                        },\r\n                        {\r\n                            value: \"f5b830\",\r\n                            time: 1\r\n                        }\r\n                    ],\r\n                    isStepped: false\r\n                },\r\n                speed: {\r\n                    list: [\r\n                        {\r\n                            value: this.itemData.radius*5,//200,\r\n                            time: 0\r\n                        },\r\n                        {\r\n                            value: this.itemData.radius,//100\r\n                            time: 1\r\n                        }\r\n                    ],\r\n                    isStepped: false\r\n                },\r\n                startRotation: {\r\n                    min: 0,\r\n                    max: 360\r\n                },\r\n                rotationSpeed: {\r\n                    min: 0,\r\n                    max: 0\r\n                },\r\n                lifetime: {\r\n                    min: 0.5,\r\n                    max: 0.5\r\n                },\r\n                frequency: 0.008,\r\n                spawnChance: 1,\r\n                particlesPerWave: 1,\r\n                emitterLifetime: 0.31,\r\n                maxParticles: this.itemData.radius*10,//300,\r\n                pos: {\r\n                    x: x,\r\n                    y: y\r\n                },\r\n                addAtBack: false,\r\n                spawnType: \"circle\",\r\n                spawnCircle: {\r\n                    x: 0,\r\n                    y: 0,\r\n                    r: 10\r\n                }\r\n            }\r\n        )\r\n        setTimeout(() => {\r\n            emitter.destroy();\r\n            emitter = undefined;\r\n        }, 500);\r\n\r\n        var elapsed = Date.now();\r\n        var update = function(){\r\n            requestAnimationFrame(update);\r\n\r\n            var now = Date.now();\r\n            emitter && emitter.update((now - elapsed) * 0.001);\r\n            elapsed = now;\r\n        };\r\n        emitter.emit = true;\r\n        update();\r\n    }\r\n    \r\n \r\n    release(){\r\n        if(this.tweenItem){\r\n            TweenMax.killTweensOf(this.tweenItem);\r\n            this.tweenItem = undefined;\r\n        }\r\n       \r\n        this.showBomb();\r\n        this.removeBody();\r\n        this.removeDisplay();\r\n    }\r\n\r\n}","class mainUI{\r\n    gameConfig;\r\n\r\n    app;\r\n    stage;\r\n    loader =  new PIXI.Loader();\r\n    resources; \r\n    matterEngine;\r\n    matterRender;\r\n    itemList;\r\n    mouseDownStates;\r\n    nextItem;\r\n    mouseX;\r\n    craetePosition;\r\n    curMaxLevel;\r\n    isBgMusicPlaying;\r\n    errorLine;\r\n    isGaming;\r\n    endLabel;\r\n    timeOutIdx;\r\n    backGround;\r\n    leftGround;\r\n    rightGround;\r\n    itemBodyLayer;\r\n\r\n    constructor(){\r\n        \r\n    }\r\n\r\n    init(gameConfig) {\r\n        this.gameConfig = gameConfig;\r\n        this.isBgMusicPlaying =false;\r\n        this.isGameEnd = false;\r\n        this.timeOutIdx = -1;\r\n        this.itemList = [];\r\n        this.craetePosition = {x:350,y:200};\r\n        this.curMaxLevel = 0;\r\n        //加载资源资源\r\n        this.loadAllRes(this.createMain.bind(this));\r\n       \r\n    }\r\n\r\n    loadAllRes(callback){\r\n        this.loader.add(\"pngList\" , \"./assets/pngList.json\");\r\n        this.loader.add(\"bgmusic\",\"./assets/bgmusic.mp3\" , {loadType:PIXI.LoaderResource.LOAD_TYPE.XHR, xhrType: 'arraybuffer'});\r\n        this.loader.add(\"bombMu\",\"./assets/bombMu.mp3\" , {loadType:PIXI.LoaderResource.LOAD_TYPE.XHR, xhrType: 'arraybuffer'});\r\n        this.loader.load(callback);\r\n\r\n    }\r\n\r\n    createMain(loader,resources){\r\n        //屏幕适配\r\n        let pos = this.resizeWindow();\r\n        var app = this.app = new PIXI.Application({\r\n            width:document.body.clientWidth,\r\n            height:document.body.clientHeight,\r\n            transparent:false,\r\n            resolution:1,\r\n            fps:60\r\n        }); //接收一个16进制的值，用于背景的颜色\r\n        \r\n        document.body.appendChild(app.view);\r\n        app.view.style.position = \"absolute\";\r\n        app.view.style.left = 0 + \"px\";\r\n        app.view.style.top = 0 + \"px\";\r\n\r\n        app.view.style.transform = `matrix(${pos.scaleX}, 0, 0, ${pos.scaleY}, 0, 0);`\r\n        this.resources = resources;\r\n        var bg = new PIXI.Sprite(resources.pngList.textures[\"bg.png\"])//resources.bg.texture);\r\n        this.stage = new PIXI.Container();\r\n        app.stage.addChild(this.stage);\r\n\r\n        PIXI.Ticker.shared.maxFps = 60;\r\n        this.resumeTicker();\r\n\r\n        this.stage.width = StageWidth;\r\n        this.stage.height = StageHeight;\r\n        this.stage.scale = {x:pos.scaleX,y:pos.scaleY};\r\n        this.stage.x = (document.body.clientWidth-StageWidth*pos.scaleX)>>1;\r\n        this.stage.y = (document.body.clientHeight-StageHeight*pos.scaleY)>>1\r\n        this.stage.addChild(bg);\r\n        this.stage.interactive = true;\r\n        this.mouseDownStates = false;\r\n        this.stage.on(\"mousedown\" ,this.onClickMouseDown , this);\r\n        this.stage.on(\"touchstart\" ,this.onClickMouseDown , this);\r\n\r\n        this.stage.on(\"mouseup\" ,this.onClickMouseUp , this); \r\n        this.stage.on(\"mouseupoutside\" ,this.onClickMouseUp , this);\r\n        this.stage.on(\"touchend\" ,this.onClickMouseUp , this); \r\n        this.stage.on(\"touchendoutside\" ,this.onClickMouseUp , this); \r\n        this.stage.on(\"mousemove\" ,this.onClickMouseMove , this);\r\n        this.stage.on(\"touchmove\" ,this.onClickMouseMove , this);\r\n        this.itemBodyLayer = new PIXI.Container();\r\n        this.stage.addChild( this.itemBodyLayer);\r\n        // 创建物理世界\r\n        this.createWorld();\r\n        //创建掉落物体\r\n\r\n        this.nextItem = this.createItem();\r\n        //创建活动图标\r\n        this.craeteActIcon();\r\n        //创建危险提示\r\n        this.craeteErrorLine();\r\n        // game over 提示\r\n        this.createEndLabel();\r\n    }\r\n\r\n    resizeWindow(){\r\n        console.log(\" ....................\");\r\n        let windowW = document.body.clientWidth;\r\n        let windowH = document.body.clientHeight;\r\n        let scaleX = windowW/StageWidth;\r\n        let scaleY =  windowH/StageMinHeight;\r\n        let scale = Math.min(scaleX ,scaleY);\r\n\r\n        let s = windowW / windowH;\r\n        if(s >= StageMaxScale){\r\n            s=StageMaxScale;\r\n        }else if(s <= StageMinScale){\r\n            s=StageMinScale;\r\n        }else{//\r\n        };\r\n      \r\n        return {scaleX:scale , scaleY:scale}; // 缩放比\r\n    }\r\n\r\n    createItem(){\r\n        var item = new itemBody({\r\n            matterEngine:this.matterEngine , \r\n            resources:this.resources ,\r\n            parent :this.itemBodyLayer , \r\n            type: Math.floor(Math.random()*this.curMaxLevel),\r\n            x:this.craetePosition.x,\r\n            y:this.craetePosition.y,\r\n            isStatic:true});\r\n\r\n        if(this.curMaxLevel < item.type){\r\n            this.curMaxLevel = item.type;\r\n        }\r\n        return item;\r\n    }\r\n\r\n    craeteActIcon(){\r\n        var btn1 = new myButton();\r\n        btn1.texture = this.resources.pngList.textures[\"getItem.png\"];\r\n        this.stage.addChild(btn1);\r\n        btn1.clickCallBack = this.reStart.bind(this)//this.gameConfig.getItemCallBack;\r\n        btn1.x= 680;\r\n        btn1.y = 420;\r\n\r\n        var btn2 = new myButton();\r\n        btn2.texture =  this.resources.pngList.textures[\"newReward.png\"];\r\n        this.stage.addChild(btn2);\r\n        btn2.clickCallBack =  this.release.bind(this);//this.gameConfig.firstRewardCallBack;\r\n        btn2.x= 680;\r\n        btn2.y = 300;\r\n\r\n        var btn3 = new myButton();\r\n        btn3.texture = this.resources.pngList.textures[\"paihang.png\"];\r\n        this.stage.addChild(btn3);\r\n        btn3.clickCallBack = this.pauseTicker.bind(this);//this.gameConfig.rankCallBack;\r\n        btn3.x= 100;\r\n        btn3.y = 300;\r\n\r\n        var btn4 = new myButton();\r\n        btn4.texture = this.resources.pngList.textures[\"guafen.png\"];\r\n        this.stage.addChild(btn4);\r\n        btn4.clickCallBack = this.resumeTicker.bind(this);//this.gameConfig.guafenCallBack;\r\n        btn4.x= 100;\r\n        btn4.y = 420;\r\n    }\r\n\r\n    createWorld(){\r\n        const Engine = Matter.Engine, \r\n        Render = Matter.Render,\r\n        World  = Matter.World,\r\n        Bodies = Matter.Bodies,\r\n        Body = Matter.body;\r\n        const engine = this.matterEngine = Engine.create();\r\n        this.matterRender = Matter.Runner.create();\r\n        var ground = this.backGround = Bodies.rectangle(200,1430,1200,500 , {isStatic:true,friction:1});\r\n        var ground1 = this.leftGround = Bodies.rectangle(0,500,10,2000 , {isStatic:true});\r\n        var ground2 = this.rightGround = Bodies.rectangle(750,500,10,2000 , {isStatic:true});\r\n        Matter.Body.set(ground , \"friction\" , 1);\r\n        World.add(engine.world,[ground,ground1,ground2]);\r\n        // Engine.run(engine); // todo\r\n\r\n        //碰撞回调\r\n        Matter.Events.on(engine, 'collisionStart', (event) => {\r\n            var pairs = event.pairs;\r\n            // if(this.nextItem){\r\n            //     this.itemList.push(this.nextItem)\r\n            // }\r\n            for(let i = 0; i < pairs.length; ++i){\r\n                let pair = pairs[i];\r\n                var boxA = this.itemList.find(item => {\r\n                    return item.body.id == pair.bodyA.id;\r\n                })\r\n                var boxB = this.itemList.find(item => {\r\n                    return item.body.id == pair.bodyB.id;\r\n                })\r\n\r\n                //\r\n                if(boxA && boxB && boxA.type === boxB.type){\r\n                    this.collisionStart(boxA,boxB);\r\n                }\r\n\r\n\r\n                if(pair.bodyA.id !== this.leftGround.id && pair.bodyB.id !== this.rightGround.id \r\n                    && pair.bodyA.id !== this.rightGround.id && pair.bodyB.id !== this.leftGround.id){\r\n                        boxA && (boxA[\"hasFall\"] = true);\r\n                        boxB && (boxB[\"hasFall\"] = true);\r\n                }\r\n    \r\n            }\r\n            \r\n        })\r\n\r\n        // Matter.Events.on(engine, 'collisionEnd', (event) => {\r\n        //     var pairs = event.pairs;\r\n        //     for(let i = 0; i < pairs.length; ++i){\r\n        //         let pair = pairs[i];\r\n        //         var boxA = this.itemList.find(item => {\r\n        //             return item.body.id == pair.bodyA.id;\r\n        //         })\r\n        //         var boxB = this.itemList.find(item => {\r\n        //             return item.body.id == pair.bodyB.id;\r\n        //         })\r\n          \r\n        //         if(boxA && boxB && boxA.type === boxB.type){\r\n        //             this.collisionStart(boxA,boxB);\r\n        //         }\r\n\r\n        //         if(pair.bodyA.id !== this.leftGround.id && pair.bodyB.id !== this.rightGround.id \r\n        //             && pair.bodyA.id !== this.rightGround.id && pair.bodyB.id !== this.leftGround.id){\r\n        //                 boxA && (boxA[\"hasFall\"] = true);\r\n        //                 boxB && (boxB[\"hasFall\"] = true);\r\n        //         }\r\n        \r\n        //     }\r\n        // })\r\n\r\n\r\n        Matter.Events.on(engine, 'afterUpdate', (event) => {\r\n            this.update();\r\n        });\r\n  \r\n    }\r\n\r\n    createEndLabel(){\r\n        this.endLabel =  new PIXI.Text('GAME  OVER',{fontFamily : 'Arial', fontSize: 40, fill : 0xff0000, align : 'center'});\r\n        this.stage.addChild(this.endLabel);\r\n        this.endLabel.visible = false;\r\n        this.endLabel.anchor.set(0.5);\r\n        this.endLabel.width = 200;\r\n        this.endLabel.x = 350;\r\n        this.endLabel.y = 500;\r\n    }\r\n\r\n    onClickMouseDown(evt){ \r\n        this.playBgMusic();//手动触发\r\n        this.mouseX = evt.currentTarget && evt.currentTarget.toLocal(evt.data.global).x;\r\n        if(!this.nextItem){\r\n            return;\r\n        }\r\n        this.mouseDownStates = true;\r\n        \r\n    }\r\n    \r\n    playBgMusic(){\r\n        !this.isBgMusicPlaying && soundManager.Ins.play(this.resources.bgmusic , true);\r\n        this.isBgMusicPlaying = true;\r\n    }\r\n\r\n    onClickMouseUp(evt){\r\n        this.mouseX = evt.currentTarget && evt.currentTarget.toLocal(evt.data.global).x;\r\n        if(!this.nextItem){\r\n            return;\r\n        }\r\n        this.mouseDownStates = false;\r\n        if(this.nextItem){//元素开启刚体\r\n            this.nextItem[\"hasFall\"] = false;\r\n            this.itemList.push(this.nextItem);\r\n\r\n            let data = globalItemData[this.nextItem.type];\r\n            let x = Math.max(this.mouseX,data.radius);\r\n            x = Math.min(x , StageWidth-data.radius);\r\n            this.nextItem.setPos(x , this.craetePosition.y);\r\n\r\n            this.nextItem.openStatic();\r\n        }\r\n        this.nextItem = null;\r\n        this.timeOutIdx = setTimeout(() => {\r\n            if(!this.nextItem){\r\n                this.nextItem = this.createItem();\r\n            }\r\n            \r\n        }, 800);\r\n    }\r\n\r\n    onClickMouseMove(evt){\r\n        this.mouseX = (evt.currentTarget && evt.currentTarget.toLocal(evt.data.global).x);\r\n        \r\n    }\r\n    collisionStart(boxA,boxB){\r\n        // boxA.toNext(boxB.body.position);\r\n        // if(this.curMaxLevel < boxA.type){\r\n        //     this.curMaxLevel = boxA.type;\r\n        // }\r\n        // let index = this.itemList.indexOf(boxB);\r\n        // this.itemList.splice(index, 1);\r\n        // boxB.release();\r\n\r\n        boxB.toNext(boxA.body.position);\r\n        if(this.curMaxLevel < boxA.type){\r\n            this.curMaxLevel = boxA.type;\r\n        }\r\n        let index = this.itemList.indexOf(boxA);\r\n        this.itemList.splice(index, 1);\r\n        boxA.release();\r\n    }\r\n    ticktime;\r\n    ticker(delat){\r\n        this.ticktime += PIXI.Ticker.shared.deltaMS;\r\n        Matter.Runner.tick(this.matterRender, this.matterEngine,this.ticktime);\r\n    }\r\n\r\n    update(){\r\n        if(this.isGameEnd){\r\n            this.showEnd();\r\n            this.pauseTicker();\r\n            return;\r\n        }\r\n        this.itemList.forEach(item => {\r\n            item.update();\r\n        });\r\n        this.checkError();\r\n        var time = Date.now();\r\n        if(!isNaN(this.oldTime) && time- this.oldTime > 200){\r\n            this.oldTime = time;\r\n            this.errorLine.visible = !this.errorLine.visible;\r\n        }\r\n        if(this.mouseDownStates && this.nextItem){\r\n            let data = globalItemData[this.nextItem.type];\r\n            let x = Math.max(this.mouseX,data.radius);\r\n            x = Math.min(x , StageWidth-data.radius);\r\n            this.nextItem.setPos(x , this.craetePosition.y);\r\n        }\r\n    }\r\n\r\n    craeteErrorLine(){\r\n        var line = this.errorLine = new PIXI.Graphics();\r\n        line.lineStyle(10,0xff0000);\r\n        line.moveTo(0,SafeLineY);\r\n        line.lineTo(StageWidth,SafeLineY);\r\n        this.stage.addChild(line);\r\n        line.visible = false;\r\n\r\n        // var line1 = new PIXI.Graphics();\r\n        // line1.lineStyle(10,0xff00);\r\n        // line1.moveTo(0,ShowSafeLineY);\r\n        // line1.lineTo(StageWidth,ShowSafeLineY);\r\n        // this.stage.addChild(line1);\r\n    }\r\n\r\n    oldTime = NaN;\r\n    showErrorLine(){\r\n       !this.boo &&  (this.oldTime = Date.now());\r\n    }\r\n\r\n    hideErrorLine(){\r\n        this.oldTime = NaN;\r\n        this.errorLine.visible = false;\r\n    }\r\n    boo = false;\r\n    checkError(){\r\n        let result = false;\r\n        this.itemList.forEach(item =>{\r\n            if(item.body.position.y - item.body.radius <=ShowSafeLineY && item[\"hasFall\"] === true){\r\n                result =  true; // 显示提示线\r\n            }\r\n            if(item.body.position.y - item.body.radius <=SafeLineY && item[\"hasFall\"] === true){\r\n                if(!item.isOverRedLine){\r\n                    item.isOverRedLine = true;\r\n                    item.isOverTimeStamp = Date.now();\r\n                }else{\r\n                    var time = Date.now();\r\n                    if(time - item.isOverTimeStamp >= EndStatesTime){\r\n                        this.isGameEnd =  true; // 游戏结束\r\n                    }\r\n                }\r\n            }else{\r\n                item.isOverRedLine = false;\r\n                item.isOverTimeStamp = NaN;\r\n            }\r\n        });\r\n        if(result){\r\n            this.showErrorLine(); \r\n            this.boo = true;\r\n        }else{\r\n            this.boo = false;\r\n            this.hideErrorLine();\r\n        }\r\n    }\r\n\r\n    showEnd(){\r\n        this.endLabel.visible = true;\r\n        if(this.timeOutIdx !== -1){\r\n            clearTimeout(this.timeOutIdx);\r\n        }\r\n\r\n        this.removeStageListener();\r\n    }\r\n\r\n    pauseTicker(){\r\n        PIXI.Ticker.shared.remove(this.ticker, this);\r\n    }\r\n\r\n    resumeTicker(){\r\n        this.ticktime = 0;\r\n        PIXI.Ticker.shared.add(this.ticker, this);\r\n    }\r\n\r\n    reStart(){\r\n\r\n        this.itemList.forEach(item =>{\r\n            item.release();\r\n        });\r\n        this.itemList = [];\r\n        if(this.nextItem){\r\n            this.nextItem.release();\r\n        }\r\n        this.nextItem = null;\r\n        this.curMaxLevel = 0;\r\n        this.endLabel.visible = false;\r\n\r\n        this.isGameEnd = false;\r\n        this.addStageListener();\r\n        this.resumeTicker();\r\n\r\n        //创建掉落物体\r\n\r\n        this.nextItem = this.createItem();\r\n    }\r\n\r\n    addStageListener(){\r\n        if(this.stage){\r\n            this.stage.on(\"mousedown\" ,this.onClickMouseDown , this);\r\n            this.stage.on(\"touchstart\" ,this.onClickMouseDown , this);\r\n            this.stage.on(\"touchmove\" ,this.onClickMouseDown , this);\r\n    \r\n            this.stage.on(\"mouseup\" ,this.onClickMouseUp , this); \r\n            this.stage.on(\"mouseupoutside\" ,this.onClickMouseUp , this);\r\n            this.stage.on(\"touchend\" ,this.onClickMouseUp , this); \r\n            this.stage.on(\"touchendoutside\" ,this.onClickMouseUp , this); \r\n            this.stage.on(\"mousemove\" ,this.onClickMouseMove , this);\r\n        }\r\n    }\r\n\r\n    removeStageListener(){\r\n        if(this.stage){\r\n            this.stage.off(\"mousedown\" ,this.onClickMouseDown , this);\r\n            this.stage.off(\"touchstart\" ,this.onClickMouseDown , this);\r\n            this.stage.off(\"touchmove\" ,this.onClickMouseDown , this);\r\n    \r\n            this.stage.off(\"mouseup\" ,this.onClickMouseUp , this); \r\n            this.stage.off(\"mouseupoutside\" ,this.onClickMouseUp , this);\r\n            this.stage.off(\"touchend\" ,this.onClickMouseUp , this); \r\n            this.stage.off(\"touchendoutside\" ,this.onClickMouseUp , this); \r\n            this.stage.off(\"mousemove\" ,this.onClickMouseMove , this);\r\n        }\r\n    }\r\n\r\n    release(){\r\n        //todo\r\n        this.removeStageListener();\r\n        if(this.loader){\r\n            this.loader.destroy();\r\n            this.loader = undefined;\r\n        }\r\n        this.resources = undefined;\r\n\r\n        Matter.Engine.clear(this.matterEngine);\r\n        Matter.World.clear(this.matterEngine.world, false);\r\n        this.itemList.forEach(item => {\r\n            item.release();\r\n        });\r\n        this.itemList.length = 0;\r\n            \r\n        if(this.app && this.app.view){\r\n            document.body.removeChild(this.app.view);\r\n        }\r\n        this.app = undefined;\r\n    }\r\n\r\n}\r\n\r\n\r\nwindow[\"aaaaaaaaaaaaaaaaaaaaa\"] = \"ssss\";\r\nwindow[\"mainUi\"] = new mainUI();"],"names":[],"sourceRoot":""}